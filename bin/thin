#!/usr/bin/env ruby
# Script to launch a Thin server for a Rails application.
# 
# To start a server for your current Rails app:
#  thin start
# You can specify the port using the -p option:
#  thin start -p3001
# By default the server will bind to 0.0.0.0:3000
# 
# You can specify which Rails environment should be loaded with the -e option:
#  thin start -e production
# 
# You can also start the server in an other process:
#  thin start -d
# And later stop it
#  thin stop
#
# Run <tt>thin -h</tt> to get help.

require File.dirname(__FILE__) + '/../lib/thin'
require 'thin/commander'

Thin::Commander.new(ARGV) do |command|
  command.include_options :port, :address, :environment, :daemonize, :log_file, :pid_file
  
  command.before do
    Dir.chdir command.options.cwd if command.options.cwd
  end
  
  command.on :start do
    server = Thin::Server.new(command.options.address, command.options.port,
                              # Let Rails handle his thing and ignore files
                              Thin::RailsHandler.new('.', command.options.environment),
                              # Serve static files
                              Thin::DirHandler.new('public')
                             )
    server.logger = Logger.new(command.options.log_file) if command.options.log_file

    if command.options.daemonize
      server.pid_file = command.options.pid_file
      server.daemonize
    else
      server.start
    end
  end

  command.on :stop do
    command.error "PID file required to stop server" unless command.options.pid_file
    Thin::Server.kill(command.options.pid_file)
  end
end
